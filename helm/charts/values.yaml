############################################################# Config for NGINX #############################################################
nginx:
  enabled: true
##################################################### Config for ElasticSearch #########################################################
selfSigned:
  enabled: true
  secretName: monitor-vechr-cert
  ca: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVIekNDQXdlZ0F3SUJBZ0lVWWZsYWh1RFkrTXhSVndVb3NIU2hORzNsM3M4d0RRWUpLb1pJaHZjTkFRRUwKQlFBd2daNHhDekFKQmdOVkJBWVRBa2xFTVJNd0VRWURWUVFJREFwS1lYZGhJRUpoY21GME1ROHdEUVlEVlFRSApEQVpEYVcxaGFHa3hFVEFQQmdOVkJBb01DRlpsWTJoeUlFTkJNUjR3SEFZRFZRUUxEQlZEWlhKMGFXWnBZMkYwClpTQkJkWFJvYjNKcGRIa3hGakFVQmdOVkJBTU1EV0Z3Y0M1MlpXTm9jaTVqYjIweEhqQWNCZ2txaGtpRzl3MEIKQ1FFV0QyRmtiV2x1UUhabFkyaHlMbU52YlRBZUZ3MHlNakV5TVRFeE56SXdNelZhRncweU56RXlNVEF4TnpJdwpNelZhTUlHZU1Rc3dDUVlEVlFRR0V3SkpSREVUTUJFR0ExVUVDQXdLU21GM1lTQkNZWEpoZERFUE1BMEdBMVVFCkJ3d0dRMmx0WVdocE1SRXdEd1lEVlFRS0RBaFdaV05vY2lCRFFURWVNQndHQTFVRUN3d1ZRMlZ5ZEdsbWFXTmgKZEdVZ1FYVjBhRzl5YVhSNU1SWXdGQVlEVlFRRERBMWhjSEF1ZG1WamFISXVZMjl0TVI0d0hBWUpLb1pJaHZjTgpBUWtCRmc5aFpHMXBia0IyWldOb2NpNWpiMjB3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURIZjJlSkp4bG03b1hqaUNKZFdvT3dydlRGQkJtRHd5RUgyQlFlZExHck1GRThTZEFkT2EwcHk0UCsKYnZlTUxMWHF4ZDMvTFN3Y3FkcU1QZHNUSytYdWJacjJEeGlWa2FJVzlTMEw4aHlPekNaR0s4eTZFRVVRVDBPYwo5YkRsTHUyaStFZHNYUVZrWVlndjJnaVE3WjNTNTNxSHN4S3o0ZjFIRjl2N2ZsZDZYVXVFTm5Eak9relRvSTRFCmRSTUtId3FxM1lJOUJXdUY2VVQ1N1NqdFFMNGhBWWhER3F2VHRHUE1DWm1HZ2V6OS9ieFU0dVk0d053bm1tRysKdjFDNkJSRnFaandEOFlzbmRRd2ZkV0RKTVJ0dFRueDkyUGpSVkxBWThCd3Vuams4MXByR2JlUW5kNjJEMldPSwpFbGtlUG4zc2xCSlFKc1RzcVFnV3hDY0M0RE1wQWdNQkFBR2pVekJSTUIwR0ExVWREZ1FXQkJUUjJKN1Q1d21nCnhVRmdMSmZ3V1BndldzQ1BQREFmQmdOVkhTTUVHREFXZ0JUUjJKN1Q1d21neFVGZ0xKZndXUGd2V3NDUFBEQVAKQmdOVkhSTUJBZjhFQlRBREFRSC9NQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJzUENTcTFlODdUbERhRGJzaApvbDJJY2s2c05tOWwxL1NMcmxWdUxsVU1NcmlQL3YxZmorYTAvV3MyS2ZXaXYzWFJtbGg2aHptNFFSdmN2a3N0CmpNb1A2NitzWU1EZ2kyUUZWamQ4ZzZuZkpiMXkzL2o4dFVLZFc1N3g2QTVwNlpNY3FubWFKWElSWjJ2VUlNMmoKdk5Qa0s3OWFxMUJJSEZBeVVLMksvenlkUjBvY21GL2F5dE41K2xnM0FtWXhtWHE3RGZRU0Z5L3ZOSHZZU3dCaQpxV3U5c0VFQUk1aG5yc0Q2SDFsWnczVFBLd2dxK0JMM0RIS0pLbmM5clpkc3FMMHBSODFEaFo3U2E1R2p2TGRPCmtUeWdyTmpYSU5QZ3RUQzFpTURnUjFxU3hlMXBscTllVWZpZU4yZ0pDL2R1VDZSMU1sc244Sm1YaHVFQXJ6QzcKbndjUAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  cert: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVRakNDQXlxZ0F3SUJBZ0lVYzJVWXV4cy8vR25oWTZPMUtRR0xKa0FYTFNZd0RRWUpLb1pJaHZjTkFRRUwKQlFBd2daNHhDekFKQmdOVkJBWVRBa2xFTVJNd0VRWURWUVFJREFwS1lYZGhJRUpoY21GME1ROHdEUVlEVlFRSApEQVpEYVcxaGFHa3hFVEFQQmdOVkJBb01DRlpsWTJoeUlFTkJNUjR3SEFZRFZRUUxEQlZEWlhKMGFXWnBZMkYwClpTQkJkWFJvYjNKcGRIa3hGakFVQmdOVkJBTU1EV0Z3Y0M1MlpXTm9jaTVqYjIweEhqQWNCZ2txaGtpRzl3MEIKQ1FFV0QyRmtiV2x1UUhabFkyaHlMbU52YlRBZUZ3MHlNekF5TURVeE5qVTVNRGhhRncweU5EQXlNRFV4TmpVNQpNRGhhTUlHY01Rc3dDUVlEVlFRR0V3SkpSREVUTUJFR0ExVUVDQXdLU21GM1lTQkNZWEpoZERFUE1BMEdBMVVFCkJ3d0dRMmx0WVdocE1ROHdEUVlEVlFRS0RBWkVaWFpQY0hNeEdqQVlCZ05WQkFzTUVXMXZibWwwYjNJdWRtVmoKYUhJdVkyOXRNUm93R0FZRFZRUUREQkZ0YjI1cGRHOXlMblpsWTJoeUxtTnZiVEVlTUJ3R0NTcUdTSWIzRFFFSgpBUllQWVdSdGFXNUFkbVZqYUhJdVkyOXRNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDCkFRRUF2K1lpWVBZWk85dEphaG91cWZNTDFXWWZjUXJvZlVrWHEwRE9ZV2I1V0srNTJrOVhYNXo1UzZCUFd3TFQKU0lQSVpjZTJpVTZXdkFhanRCajVKVTdWcURWMFBrbDBid20xNlhLL1Q5RnBIVW50Y1J1Q1hqVStBdXFmVXBOMApWbFNVaUtVS2h1L2c0K1Z1WCtBcEVhKy92VXRRMzYzTExhclBOR2k0NGZFMEF6RGpSSFV1dmxsajJqR1JrQm1uCkhHTVp0bDRNMzVMTGQyYnlOempkQzZCVGNwYlNGd1R3UTRLSzNiUHhPUVEyS1ZWVmtiZlQvMUhxV1U3ODBxT28KRkVRNVpVUlUxVUQ5YlpEdXJSK0xoVUxiQmxTUWxHYkMyUHBsRWVYbCsrSTBVZW00MXMzdDUwWnNzL0swSVV6Mgo2cHpSWDFvZzlUOXJCNHZZbGpWc3BDODBOd0lEQVFBQm8zZ3dkakFmQmdOVkhTTUVHREFXZ0JUUjJKN1Q1d21nCnhVRmdMSmZ3V1BndldzQ1BQREFKQmdOVkhSTUVBakFBTUFzR0ExVWREd1FFQXdJRThEQWNCZ05WSFJFRUZUQVQKZ2hGdGIyNXBkRzl5TG5abFkyaHlMbU52YlRBZEJnTlZIUTRFRmdRVUxhM1N1eWVKUWxYNmx0MjRMQ1o1MWFuUApYWnN3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUNwSTQwbGxzUEo5THNIOGhqUlNVSVRIZWh0NjYwMWNCNEZECk1OMmZtN3h0bStiMDVnZFZwWU1mZ2x2MURSRnJ0dXIrbDFzSCs4OE5LZ3p6V245SVZYTHQyVDNPOXNxNlVlQ0cKRUlhMzZ4WWxBMXpmRTcxWFVVTkJhVFRjUTNiSGV6akV1V1FtUG1rWS82clBPa2pXVW1sbFlnRnlCRGNhME9OMwp0d0hVUXlkNGhCdGdPQTJHaVdIOFR4eUVyUlN0a0x5elRuOCt2b2NMSUlzRzVkV0hnRzhQUERlbFFrWXBObnJOClRTN3BRRzM0d0g1dWpxT0lSRGRSRDN2anBMM1BpQmVtQzB5SVBBTldzV201Q1VTS1g4RnF3R0pCQUcyanlpY2MKMTZIQU04amNGZ3ltd1BRQTNwVTl3dlY5Tk94TlYwTXNCTS9QUTh4SkZaNTZ5c1dsVEpVPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2QUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktZd2dnU2lBZ0VBQW9JQkFRQy81aUpnOWhrNzIwbHEKR2k2cDh3dlZaaDl4Q3VoOVNSZXJRTTVoWnZsWXI3bmFUMWRmblBsTG9FOWJBdE5JZzhobHg3YUpUcGE4QnFPMApHUGtsVHRXb05YUStTWFJ2Q2JYcGNyOVAwV2tkU2UxeEc0SmVOVDRDNnA5U2szUldWSlNJcFFxRzcrRGo1VzVmCjRDa1JyNys5UzFEZnJjc3RxczgwYUxqaDhUUURNT05FZFM2K1dXUGFNWkdRR2FjY1l4bTJYZ3pma3N0M1p2STMKT04wTG9GTnlsdElYQlBCRGdvcmRzL0U1QkRZcFZWV1J0OVAvVWVwWlR2elNvNmdVUkRsbFJGVFZRUDF0a082dApINHVGUXRzR1ZKQ1Vac0xZK21VUjVlWDc0alJSNmJqV3plM25SbXl6OHJRaFRQYnFuTkZmV2lEMVAyc0hpOWlXCk5XeWtMelEzQWdNQkFBRUNnZ0VBTDdMaVpMdUhOaXVocWUvc0hXNCtTTUxqbWRPZVNsWDZ2aVNUcC81U2lFclYKcFlBSE5jcnM1SEZxaURMQmxjcTc2eUNqTEtvT0tacDA0blU2cUoxWjJqKy9MeVJPL3JLcE51ZkF5ZlJCYm5oTAp2c3Vac2hVRjN1KzJ2bTNNZ3hEdkFyQVRWOHNVV1ZGVUNCek4ySW1ZM1ZKMVBjUVROcnk0V0V5WGVBSGViZFF3CkNXUXBwakxsMWsvMzZuTlVvY2puaFh0T0RLdE85eGpIeHFYc29lc21ZTkpHcUxpeXVxM3pOMUtBc0dieXBrNE0KYlRZQjJxWWtHOUFzdUVFRTNicDdTQnVZclYrVm9Jam04OGVvaTV5M1VUZFBmVEtuYTZEKzZmQ1VnUHdMakJxQQpUOWsxU0JOcGZGeitPdEk0dmdUS0RtcVE0NmFqaTJURnROYThoc1pVd1FLQmdRRDZSaWJqcUN4QzQ1TlB4RXhlClEydWw4aHcrTVN0RDJJVVIreHkrdFpYY0JiS2xZMVg1OGtBMXFUTUIySi9ZN04rK25iSUZEa0lxT09VRlFPejMKQW5nVHRSd0lzcGxyT0cxSFI5UEpoWVhCODB6ZWJYbHZBSGttdzBwMTVMMklKazJudktuUC9aR3NvWFF3U1h5WApNUW52Y0Nna1NMTEtlY21hekN2VFdoRkFFUUtCZ1FERVNoVEtkOUpiZjhCekdvdjBrTGN3SjJnZzF5MzhrUWFLCm1KMHV4dEQ1ekgzNHEwVXRKRVdLVlhKeURMTGtYZXZ4M0lHSVp0UytiaHJ4WHVVWXZ4VkZDOXQ0SjIySTl4WmwKK254d01vS2ZlTEtDTm51YVZ1azg0TVFpRmxGRGlWV0gxeU9ncktCRHZNYXpmb3QwUHNCY2Jrb3E5NnpiRzZGWgpFNnY2VXBiM3h3S0JnRUZrdXh5WkFKZXBwd0FjcG1lcTdpRzZGUzhhNGRja2FBQyt3RkFFV2xmWEZVcXBuZmxsCkZ1bnVmK2xubEx5MWgvRGllM1ZldUdNWDRwOXd5M252SnpqZkJhZ3dJbTRsbkVnWHVIcmJiSXUwNnN6amhlcy8KRUdqVWRrdy9yRlk2eStlY0lESzhhcWZVdCtzMkNGdm84Rk9qMXBsRWRaTDZKM2RQQ2RSN29DNUJBb0dBYm1KVwp0TkdUUzM5WlE2R2ZLUWFrN2dDTEwwU3pDTUNwMUJFays2UTA2dlZUdGg3aXhSTUx4Rkp2RExJVmZCVlJWVzh5CnJQbGZGRVFwQktuZjNmMi9RVmY4c09KRFYrM1QrNzlVY1dnR1N4WCtGUG44b252VHFEZWlOS1VtUi91WVRNN3cKcXkvSTVLN3BjeEZyN1JCSTd2SGE1YlRvMFVNRmhtbG9vbG9GcWdzQ2dZQUtBbVJIaXdBK1QybzRQbHZoK2RFcQorTWlzWlRFbXZnbjJLdFlaYnNnMXE3VEF0dndGUWF6SUllckN4eW13SGhSalgydExmcWEyeDM1dzNlSmxVK0pwCmtiT2FwTG9yeDB2a0ROMmJ5R0FDcGVYRXVkRmxhYldXSHN5TmxxMFQrRDNOWHlVV2ZKYmJnY2Y4VkM3SWd6MWwKb0lCZGkzUUh1Qm5qYUhYbFpsNVZGdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K

elasticsearch:
  enabled: true
  secret:
    enabled: true
    password: "vechr-obs" # generated randomly if not defined
  
  esJavaOpts: "-Xmx128m -Xms128m"

  antiAffinity: "soft"
  
  volumeClaimTemplate:
    accessModes: ["ReadWriteOnce"]
    resources:
      requests:
        storage: 10Gi

  # Allocate smaller chunks of memory per pod.
  resources:
    requests:
      cpu: "100m"
      memory: "512M"
    limits:
      cpu: "1000m"
      memory: "512M"

  # ingress:
  #   enabled: false
  #   annotations:
  #     kubernetes.io/ingress.class: nginx
  #     nginx.ingress.kubernetes.io/proxy-ssl-verify: "false"
  #     nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
  #   hosts:
  #     - host: monitor.vechr.com
  #       paths:
  #         - path: /
  #   tls:
  #    - secretName: monitor-vechr-cert-dev
  #      hosts:
  #        - monitor.vechr.com

##################################################### Config for Logstash #########################################################
logstash:
  enabled: true
  logstashConfig:
    logstash.yml: |
      http.host: 0.0.0.0
      xpack.monitoring.enabled: false

  logstashPipeline:
    uptime.conf: |
      input { exec { command => "uptime" interval => 30 } }
      output {
        elasticsearch {
          hosts => ["https://elasticsearch-master:9200"]
          user => '${ELASTICSEARCH_USERNAME}'
          cacert => '/usr/share/logstash/config/certs/ca.crt'
          password => '${ELASTICSEARCH_PASSWORD}'
          index => "logstash"
        }
      }

  extraEnvs:
    - name: "ELASTICSEARCH_USERNAME"
      valueFrom:
        secretKeyRef:
          name: elasticsearch-master-credentials
          key: username
    - name: "ELASTICSEARCH_PASSWORD"
      valueFrom:
        secretKeyRef:
          name: elasticsearch-master-credentials
          key: password

  secretMounts: 
    - name: elasticsearch-master-certs
      secretName: elasticsearch-master-certs
      path: /usr/share/logstash/config/certs
  
  service:
    annotations: {}
    type: ClusterIP
    loadBalancerIP: ""
    ports:
      - name: beats
        port: 5044
        protocol: TCP
        targetPort: 5044
      - name: http
        port: 8080
        protocol: TCP
        targetPort: 8080

##################################################### Config for Kibana #########################################################
kibana:
  enabled: true